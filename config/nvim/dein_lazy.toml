[[plugins]]
repo= 'lilydjwg/colorizer'
on_event = ["/BufEnter"]

[[plugins]]
on_event = ["BufRead"]
repo = 'jose-elias-alvarez/null-ls.nvim'
lua_source = """
require("configs/null-ls")
"""

[[plugins]]
repo = 'jay-babu/mason-null-ls.nvim'
on_source = ["null-ls.nvim"]

[[plugins]]
repo = "segeljakt/vim-silicon"
on_cmd = ["Silicon"]
# lua_source = """
# require("configs/silicon")
# """

[[plugins]]
repo = "mattn/vim-chatgpt"
on_cmd = ["chatgpt", "codereviewplease"]

[[plugins]]
repo = 'lambdalisue/kensaku.vim'
on_event = ["BufRead"]

[[plugins]]
repo = "lambdalisue/kensaku-command.vim"
on_source = ["kensaku.vim"]

[[plugins]]
repo = 'lambdalisue/kensaku-search.vim'
on_source = ["kensaku.vim"]

[[plugins]]
repo = 'skanehira/command.vim'
on_cmd = ["CommandBufferOpen"]

[[plugins]]
repo = 'https://github.com/numToStr/Comment.nvim'
on_event = ["BufRead"]
lua_source = """
require('Comment').setup()
"""

[[plugins]]
repo = "lukas-reineke/indent-blankline.nvim"
on_event = ["BufRead"]
lua_source = """
require("configs/blankline")
"""

[[plugins]]
repo = 'bfredl/nvim-luadev'
on_cmd = ['Luadev']

# 使用頻度が低いプラグイン
# 毎回使わないようなプラグインはここ
[[plugins]]
repo = 'sakhnik/nvim-gdb'
on_cmd = [
"GdbStart",
"GdbStartPDB",
"GdbStartBashDB",
"GdbStartRR",
"GdbBreakpointToggle",
"GdbUntil",
"GdbContinue",
"GdbNext",
"GdbStep"
"GdbFinish",
"GdbFrameUp",
"GdbFrameDown"]

[[plugins]]
repo = 'skanehira/translate.vim'
on_cmd = ["Translate"]

[[plugins]]
repo = 'https://github.com/windwp/nvim-ts-autotag'
on_source = ["nvim-treesitter"]
lua_source = """
require("nvim-ts-autotag").setup()

require'nvim-treesitter.configs'.setup {
  autotag = {
    enable = true,
  }
}
"""

[[plugins]]
repo = 'twitvim/twitvim'
on_cmd = [
  "FriendsTwitter",
  "PosttoTwitter",
  "BPosttoTwitter",
  "UserTwitte",
  "MentionsTwitter "
  "PublicTwitter",
  "DMTwitter",
  "SearchTwitte"
  ]

[[plugins]]
repo = 'kdheepak/lazygit.nvim'
on_cmd = ["LazyGit", "LazyGitConfig", "LazyGitFilter", "LazyGitFilterCurrentFile"]

[[plugins]]
repo = 'https://github.com/Shougo/deol.nvim'
on_cmd = ["Deol"]
# source_lua = """
# """

[[plugins]]
repo = 'nvim-telescope/telescope-file-browser.nvim'
on_source = ["telescope.nvim"]

[[plugins]]
repo = 'https://github.com/Allianaab2m/telescope-kensaku.nvim'
on_source = ["telescope.nvim"]

[[plugins]]
repo ='nvim-telescope/telescope.nvim'
on_cmd = ["Telescope"]
# on_event = ["BufRead"]
# on_source = ["telescope-file-browser.nvim"]
lua_source = """
require("configs/telescope")
"""


[[plugins]]
repo = 'itchyny/calendar.vim'
on_cmd = ["Calendar"]

[[plugins]]
repo = 'https://github.com/dstein64/vim-startuptime'
on_cmd = ["StartupTime"]

[[plugins]]
repo= 'https://github.com/yuttie/comfortable-motion.vim'
on_event = ["BufRead"]

[[plugins]]
repo = 'windwp/nvim-autopairs'
on_source = ["nvim-cmp"]
lua_source = """
require("nvim-autopairs").setup()

local cmp_autopairs = require('nvim-autopairs.completion.cmp')
local cmp = require('cmp')
cmp.event:on(
  'confirm_done',
  cmp_autopairs.on_confirm_done()
)
"""

[[plugins]]
repo = 'vim-denops/denops-helloworld.vim'
on_cmd = ["DenopsHello", "DenopsGrep"]

[[plugins]]
repo = 'https://github.com/mattreduce/vim-mix'
on_cmd = ["Mix", "Mclean", "Mcompile", "Mdeps", "Mtest"]

[[plugins]]
repo = "https://github.com/wakatime/vim-wakatime"
on_event = ["BufRead"]

[[plugins]]
repo = "https://github.com/HiPhish/nvim-ts-rainbow2"
on_event = ["BufRead"]
lua_source = """
require('nvim-treesitter.configs').setup {
  rainbow = {
    enable = true,
    query = 'rainbow-parens',
    strategy = require('ts-rainbow').strategy.global,
  }
}
"""

[[plugins]]
repo = "https://github.com/JoosepAlviste/nvim-ts-context-commentstring"
on_event = ["BufRead"]
lua_source = """
require'nvim-treesitter.configs'.setup {
  context_commentstring = {
    enable = true
  }
}
"""

[[plugins]]
repo= 'https://github.com/nvim-treesitter/nvim-treesitter'
on_event = ["BufRead"]
lua_source = """
require("configs/treesitter")
"""

[[plugins]]
repo = "https://github.com/vim-skk/skkeleton"
on_event = ["InsertEnter"]
lua_source = """
require("configs/skkeleton")
"""

[[plugins]]
repo = "https://github.com/phaazon/hop.nvim"
on_event = ["BufRead"]
lua_source = """
require("configs/hop")
"""

[[plugins]]
repo = 'https://github.com/miyakogi/seiya.vim'
on_event = ["VimEnter"]
lua_source = """
vim.g.seiya_auto_enable=1
vim.cmd("let g:seiya_target_groups = has('nvim') ? ['guibg'] : ['ctermbg']")
"""

[[plugins]]
repo = "https://github.com/nvim-treesitter/nvim-treesitter-context"
on_event = ["BufRead"]
lua_source = """
require'treesitter-context'.setup{
  enable = true, -- Enable this plugin (Can be enabled/disabled later via commands)
  max_lines = 0, -- How many lines the window should span. Values <= 0 mean no limit.
  min_window_height = 0, -- Minimum editor window height to enable context. Values <= 0 mean no limit.
  line_numbers = true,
  multiline_threshold = 20, -- Maximum number of lines to collapse for a single context line
  trim_scope = 'outer', -- Which context lines to discard if `max_lines` is exceeded. Choices: 'inner', 'outer'
  mode = 'cursor',  -- Line used to calculate context. Choices: 'cursor', 'topline'
  -- Separator between context and content. Should be a single character string, like '-'.
  -- When separator is set, the context will only show up when there are at least 2 lines above cursorline.
  separator = nil,
  zindex = 20, -- The Z-index of the context window
}
"""

[[plugins]]
repo = "https://github.com/lambdalisue/fern.vim"
on_cmd = ["Fern"]
lua_source = """
vim.cmd("let g:fern#renderer = 'nerdfont'")
"""

[[plugins]]
repo = "lambdalisue/fern-renderer-nerdfont.vim"
on_source = ["fern.vim"]

[[plugins]]
repo = "lambdalisue/nerdfont.vim"
on_source = ["fern.vim"]

[[plugins]]
repo = "~/ghq/github.com/coma/runit.nvim"
on_event = ["BufRead"]
lua_source = """
require("configs/runit")
"""

[[plugins]]
repo = "https://github.com/Shougo/dda.vim"
on_event = ["BufRead"]

[[plugins]]
repo = "junegunn/fzf.vim"
on_cmd = ["Fq"]

[[plugins]]
repo = 'simrat39/symbols-outline.nvim'
on_event = ["BufRead"]
lua_source = """
require("configs/outline")
vim.cmd("au BufRead * :SymbolsOutlineOpen")
"""

[[plugins]]
repo = "https://github.com/nvim-treesitter/nvim-treesitter-textobjects"
on_source = ["nvim-treesitter"]

[[plugins]]
repo = "https://github.com/SmiteshP/nvim-navic"
on_event = ["BufEnter"]
lua_source = """
local navic = require("nvim-navic")

navic.setup {
    icons = {
        File          = " ",
        Module        = " ",
        Namespace     = " ",
        Package       = " ",
        Class         = " ",
        Method        = " ",
        Property      = " ",
        Field         = " ",
        Constructor   = " ",
        Enum          = "練",
        Interface     = "練",
        Function      = " ",
        Variable      = " ",
        Constant      = " ",
        String        = " ",
        Number        = " ",
        Boolean       = "◩ ",
        Array         = " ",
        Object        = " ",
        Key           = " ",
        Null          = "ﳠ ",
        EnumMember    = " ",
        Struct        = " ",
        Event         = " ",
        Operator      = " ",
        TypeParameter = " ",
    },
    lsp = {
        auto_attach = false,
        preference = nil,
    },
    highlight = false,
    separator = " > ",
    depth_limit = 0,
    depth_limit_indicator = "..",
    safe_output = true
}

"""

[[plugins]]
repo = 'nvim-lualine/lualine.nvim'
# on_event = ["VimEnter"]
# on_source = ["nvim-web-devicons"]
lua_source = """
-- require("configs/lualine")
"""

[[plugins]]
repo = 'https://github.com/nvim-tree/nvim-web-devicons'
on_source = ["BufRead"]
lua_source = """
require('nvim-web-devicons').setup()
"""

[[plugins]]
repo = 'https://github.com/simeji/winresizer'
on_event = ["BufRead"]

# [[plugins]]
# repo = 'https://github.com/utilyre/barbecue.nvim'
# on_source = ["nvim-navic"]
# # on_event = ["BufEnter"]
# lua_source = """
# require("configs/barbecue")
# """

[[plugins]]
repo = 'https://github.com/yuki-yano/fuzzy-motion.vim'
on_cmd = ["FuzzyMotion"]
lua_source = """
vim.keymap.set("n", "S", "<cmd>FuzzyMotion<CR>")
vim.g.fuzzy_motion_matchers = { "kensaku", "fzf" }
"""

[[plugins]]
repo = 'https://github.com/simnalamburt/vim-mundo'
on_cmd = ["MundoToggle"]

# [[plugins]]
# repo = 'https://github.com/mhinz/vim-sayonara'
# on_cmd = ["Sayonara", "Sayonara!"]

# [[plugins]]
# repo = 'https://github.com/vim-test/vim-test'
# on_cmd = ["TestNearest", "TestFile", "TestSuite", "TestLast", "TestVisit"]

[[plugins]]
repo = 'kylechui/nvim-surround'
on_event = ["BufRead"]
lua_source = """
require("nvim-surround").setup()
"""

[[plugins]]
repo = "https://github.com/lambdalisue/mr.vim"
on_event = ["BufRead"]

[[plugins]]
repo = "https://github.com/Comamoca/mr-telescope"
on_source = ["telescope.nvim"]
lua_source = """
-- require("nvim-surround").setup({})
"""

[[plugins]]
repo = "https://github.com/tomasky/bookmarks.nvim"
on_source = ["telescope.nvim"]
lua_source = """
require('bookmarks').setup {
  -- sign_priority = 8,  --set bookmark sign priority to cover other sign
  save_file = vim.fn.expand "$HOME/.bookmarks", -- bookmarks save file path
  keywords =  {
    ["@t"] = "☑️ ", -- mark annotation startswith @t ,signs this icon as `Todo`
    ["@w"] = "⚠️ ", -- mark annotation startswith @w ,signs this icon as `Warn`
    ["@f"] = "⛏ ", -- mark annotation startswith @f ,signs this icon as `Fix`
    ["@n"] = " ", -- mark annotation startswith @n ,signs this icon as `Note`
  },
  on_attach = function(bufnr)
    local bm = require "bookmarks"
    local map = vim.keymap.set
    map("n","mm",bm.bookmark_toggle) -- add or remove bookmark at current line
    map("n","mi",bm.bookmark_ann) -- add or edit mark annotation at current line
    map("n","mc",bm.bookmark_clean) -- clean all marks in local buffer
    map("n","mn",bm.bookmark_next) -- jump to next mark in local buffer
    map("n","mp",bm.bookmark_prev) -- jump to previous mark in local buffer
    map("n","ml",bm.bookmark_list) -- show marked file list in quickfix window
  end
}

require('telescope').load_extension('bookmarks')
"""

# [[plugins]]
# repo = 'Bekaboo/dropbar.nvim'
# on_event = ["BufRead"]
# lua_source = """
# -- require("dropbar.nvim").setup()
# """

[[plugins]]
repo = "https://github.com/vim-jp/vimdoc-ja"
on_cmd = ["help"]

[[plugins]]
repo = "https://github.com/kyoh86/vim-ripgrep"
on_event = ["BufEnter"]

[[plugins]]
repo = "https://github.com/lewis6991/satellite.nvim"
on_event = ["BufEnter"]

# [[plugins]]
# repo = "https://github.com/epwalsh/obsidian.nvim"
# on_event = ["BufEnter"]
# lua_source = """
#  require("obsidian").setup(
#  dir = "~/ghq/github.com/Comamoca/note"
#  )
# """

[[plugins]]
repo = 'VonHeikemen/fine-cmdline.nvim'
on_cmd = ["FineCmdline"]
lua_source = """
vim.api.nvim_set_keymap('n', ':', '<cmd>FineCmdline<CR>', {noremap = true})
"""

[[plugins]]
repo = 'https://github.com/esensar/nvim-dev-container'
on_cmd = [
  "DevcontainerStart",
  "DevcontainerAttach",
  "DevcontainerExec",
  "DevcontainerStop",
  "DevcontainerStopAll",
  "DevcontainerRemoveAll",
  "DevcontainerLogs",
  "DevcontainerEditNearestConfig"
]
lua_source = """
require("devcontainer").setup{}
"""

[[plugins]]
repo = 'https://github.com/rafcamlet/nvim-luapad'
on_cmd = ["Luapad"]
lua_source = """
require('luapad').setup()
"""

[[plugins]]
repo = 'https://github.com/svermeulen/nvim-teal-maker'
on_cmd = ["TealBuild"]

# [[plugins]]
# repo = 'huggingface/hfcc.nvim'
# on_event = ["BufEnter"]
# lua_source = """
# require('hfcc').setup({
# model = "bigcode/starcoder",
# accept_keymap = "<C-i>",
# dismiss_keymap = "<C-o>",
# max_context_after = 5000,
# max_context_before = 5000,
# tls_skip_verify_insecure = false,
# })
# """

[[plugins]]
repo = "folke/zen-mode.nvim"
on_cmd = ["ZenMode"]
lua_source = """
require("configs/zen")
"""

# [[plugins]]
# repo = "https://github.com/echasnovski/mini.nvim"
# on_event = ["VimEnter"]
# lua_source = """
# require("configs/mini")
# """

[[plugins]]
repo = "folke/noice.nvim"
on_event = ["VimEnter"]
lua_source = """
require("configs/noice")
"""

[[plugins]]
on_source = ["noice.nvim"]
repo = "rcarriga/nvim-notify"

[[plugins]]
on_source = ["noice.nvim"]
repo = "MunifTanjim/nui.nvim"
