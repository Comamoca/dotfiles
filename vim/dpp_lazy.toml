[[plugins]]
repo = "morhetz/gruvbox"
on_event = ['BufRead', 'CursorHold']

[[plugins]]
repo = "sainnhe/gruvbox-material"
on_event = ['BufRead', 'CursorHold']
hook_source = """
set background=dark
colorscheme gruvbox-material
"""

# [[plugins]]
# repo = 'mhinz/vim-sayonara'
# on_event = ['BufRead', 'CursorHold']
# hook_source = """
# nnoremap <C-f> <cmd>Sayonara<CR>
# """

[[plugins]]
repo = "Shougo/context_filetype.vim"
on_event = ['BufRead', 'CursorHold', "BufReadPre"]
hook_source = '''
nnoremap <Leader>p <Cmd>call <SID>operator_partedit()<CR>

function! s:operator_partedit() abort
  let context = context_filetype#get()
  if context.range == [[0, 0], [0, 0]]
    echohl WarningMsg
    echomsg 'Context is not found'
    echohl NONE
    return
  endif
  call partedit#start(context.range[0][0], context.range[1][0],
        \ {'filetype': context.filetype})
  nnoremap <buffer><nowait> Q <Cmd>w<CR><Cmd>ParteditEnd<CR>
endfunction
'''

[[plugins]]
repo = 'thinca/vim-partedit'
on_event = ['BufRead', 'CursorHold', "BufReadPre"]
hook_source = '''
    let g:partedit#prefix_pattern = '\s*'
    let g:partedit#auto_prefix = 0
'''

[[plugins]]
repo = "yuttie/comfortable-motion.vim"
on_event = ['BufRead', 'CursorHold']
hook_source = '''
" nnoremap <silent><C-k> :<C-u>call comfortable_motion#flick(-70)<CR>
" nnoremap <silent><C-j> :<C-u>call comfortable_motion#flick(70)<CR>

let g:comfortable_motion_no_default_key_mappings = 1
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'
on_event = ['BufRead', 'CursorHold']
hook_source = '''
call tcomment#type#Define('janet', '# %s')
'''

[[plugins]]
repo = 'Shougo/ddc-ui-pum'
on_event = ['InsertEnter']

[[plugins]]
repo = 'Shougo/deol.nvim'
on_event = ['BufRead', 'CursorHold']

[[plugins]]
repo = 'skanehira/denops-translate.vim'
on_cmd = ['Translate', 'Translate!']

# ==================== lightline ==================== 
# [[plugins]]
# repo = 'itchyny/lightline.vim'
# on_event = ['BufRead', 'CursorHold']
# hook_source = '''
# execute("source" .. expand("~/.vim/lightline.vim"))
# '''

[[plugins]]
repo = 'thinca/vim-quickrun'
on_event = ['BufRead', 'CursorHold']
on_source = """
let g:quickrun_config = {
\   "_" : {
\       "outputter/buffer/split" : ":botright",
\       "outputter/buffer/close_on_empty" : 1
\   }
\}

autocmd BufNewFile,BufRead *.gleam let g:quickrun_config.gleam = {'command': 'gleam run', 'exec' : ''}
let g:quickrun_config.deno = {"command": "deno run"}

nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-c>"
"""

[[plugins]]
repo = 'cohama/lexima.vim'
on_event = ['BufRead', 'CursorHold']

[[plugins]]
repo = "jasonccox/vim-wayland-clipboard"
on_event = ['BufRead', 'CursorHold']

[[plugins]]
repo = "miyakogi/seiya.vim"
on_event = ["ColorSchemePre", 'BufReadPre', 'CursorHold']
hook_source = """
let g:seiya_auto_enable=1
"""

[[plugins]]
repo = "wakatime/vim-wakatime"
on_event = ['BufRead', 'CursorHold']

[[plugins]]
repo = "easymotion/vim-easymotion"
on_event = ['BufRead', 'CursorHold']
hook_source = """
nmap <Leader>k <Plug>(easymotion-overwin-line)
"""

[[plugins]]
repo = "yuki-yano/fuzzy-motion.vim"
depends = ['denops.vim', 'kensaku.vim']
on_cmd = ["FuzzyMotion"]
hook_source = """
let g:fuzzy_motion_matchers = ['fzf', 'kensaku']
"""

# [[plugins]]
# repo = 'lambdalisue/kensaku.vim'
# on_event = ['BufRead', 'CursorHold']
# on_event = ['VimEnter']
# on_source = 'denops.vim'

[[plugins]]
repo = "lambdalisue/vim-kensaku-search"
on_event = ['BufRead', 'CursorHold']
hook_source = """"
cnoremap <CR> <Plug>(kensaku-search-replace)<CR>
"""

[[plugins]]
repo = 'kat0h/bufpreview.vim'
build = 'deno task prepare'
on_cmd = [
    'PreviewMarkdown',
    'PreviewMarkdownStop',
    'PreviewMarkdownToggle',
]

[[plugins]]
repo = 'lambdalisue/vim-mr'
on_event = ['BufRead', 'CursorHold']

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
on_event = ['BufRead', 'CursorHold']

# [[plugins]]
# repo = 'sheerun/vim-polyglot'
# on_event = ['BufRead', 'CursorHold']

[[plugins]]
repo = 'luochen1990/rainbow'
on_event = ['BufRead', 'CursorHold']
hook_source = '''
let g:rainbow_active = 1 
'''

[[plugins]]
repo = 'junegunn/fzf'
on_event = ['BufRead', 'CursorHold']

[[plugins]]
repo = 'junegunn/fzf.vim'
on_event = ['BufRead', 'CursorHold']
hook_source = """
"""

[[plugins]]
repo = 'vim-denops/denops-shared-server.vim'
on_func = ["denops_shared_server#install", "denops_shared_server#uninstall"]

[[plugins]]
repo = 'vim-jp/vimdoc-ja'
on_event = ['BufRead', 'CursorHold']

[[plugins]]
repo = 'vim-airline/vim-airline'
on_event = ['BufRead', 'CursorHold']
on_source = '''
let g:airline_left_sep = '‚ÆÄ'
let g:airline_left_alt_sep = '‚ÆÅ'

let g:airline_right_sep = '‚ÆÇ'
let g:airline_right_alt_sep = '‚ÆÉ'
let g:airline_symbols.crypt = 'üîí'
let g:airline_symbols.linenr = '¬∂'
let g:airline_symbols.maxlinenr = 'Ë°å'
let g:airline_symbols.branch = '‚≠†'
let g:airline_symbols.paste = 'œÅ'
let g:airline_symbols.spell = 'Íû®'
let g:airline_symbols.notexists = '‚àÑ'
let g:airline_symbols.whitespace = 'Œû'

let g:ariline_theme = "base16_gruvbox_dark_hard"
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
on_source = 'vim-ariline'

[[plugins]]
repo = 'ryanoasis/vim-devicons'
on_event = ['BufRead', 'CursorHold']

[[plugins]]
repo = 'preservim/vim-indent-guides'
on_event = ['BufRead', 'CursorHold']
on_source = '''
'''
