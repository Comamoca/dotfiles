# [[plugins]]
# repo = 'vim-denops/denops.vim'
# on_event = ['BufRead', 'CursorHold']

[[plugins]]
repo = "morhetz/gruvbox"
on_event = ['BufRead', 'CursorHold']

[[plugins]]
repo = "sainnhe/gruvbox-material"
on_event = ['BufRead', 'CursorHold']
hook_source = """
set background=dark
colorscheme gruvbox-material
"""

[[plugins]]
repo = 'mhinz/vim-sayonara'
on_event = ['BufRead', 'CursorHold']
hook_source = """
nnoremap <C-f> <cmd>Sayonara<CR>
"""

[[plugins]]
repo = "Shougo/context_filetype.vim"
on_event = ['BufRead', 'CursorHold', "BufReadPre"]
hook_source = '''
nnoremap <C-p> <Cmd>call <SID>operator_partedit()<CR>

function! s:operator_partedit() abort
  let context = context_filetype#get()
  if context.range == [[0, 0], [0, 0]]
    echohl WarningMsg
    echomsg 'Context is not found'
    echohl NONE
    return
  endif
  call partedit#start(context.range[0][0], context.range[1][0],
        \ {'filetype': context.filetype})
  nnoremap <buffer><nowait> Q <Cmd>w<CR><Cmd>ParteditEnd<CR>
endfunction
'''

[[plugins]]
repo = 'thinca/vim-partedit'
on_event = ['BufRead', 'CursorHold', "BufReadPre"]
hook_source = '''
    let g:partedit#prefix_pattern = '\s*'
    let g:partedit#auto_prefix = 0
'''

[[plugins]]
repo = "yuttie/comfortable-motion.vim"
on_event = ['BufRead', 'CursorHold']
hook_source = '''
nnoremap <silent><C-k> :<C-u>call comfortable_motion#flick(-70)<CR>
nnoremap <silent><C-j> :<C-u>call comfortable_motion#flick(70)<CR>

let g:comfortable_motion_no_default_key_mappings = 1
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'
on_event = ['BufRead', 'CursorHold']
hook_source = '''
call tcomment#type#Define('janet', '# %s')
'''

[[plugins]]
repo = 'Shougo/ddc-ui-pum'
on_event = ['InsertEnter']

[[plugins]]
repo = 'Shougo/deol.nvim'
on_event = ['BufRead', 'CursorHold']

[[plugins]]
repo = 'skanehira/denops-translate.vim'
on_cmd = ['Translate', 'Translate!']

# ==================== lightline ==================== 
[[plugins]]
repo = 'itchyny/lightline.vim'
on_event = ['BufRead', 'CursorHold']
hook_source = '''
" execute("source" .. expand("~/.vim/lightline.vim"))
'''

[[plugins]]
repo = 'skanehira/denops-translate.vim'
on_cmd = ['Translate', 'Translate!']

[[plugins]]
repo = 'thinca/vim-quickrun'
on_event = ['BufRead', 'CursorHold']

[[plugins]]
repo = 'cohama/lexima.vim'
on_event = ['BufRead', 'CursorHold']

[[plugins]]
repo = "jasonccox/vim-wayland-clipboard"
on_event = ['BufRead', 'CursorHold']

[[plugins]]
repo = "miyakogi/seiya.vim"
on_event = ["ColorSchemePre", 'BufReadPre', 'CursorHold']
hook_source = """
let g:seiya_auto_enable=1
"""

[[plugins]]
repo = "wakatime/vim-wakatime"
on_cmd = [
          'WakaTimeApiKey',
          'WakaTimeDebugEnable',
	  'WakaTimeDebugDisable',
	  'WakaTimeScreenRedrawEnable',
	  'WakaTimeScreenRedrawEnableAuto',
	  'WakaTimeScreenRedrawDisable',
	  'WakaTimeToday',
	 ]

[[plugins]]
repo = "easymotion/vim-easymotion"
on_event = ['BufRead', 'CursorHold']
hook_source = """
nmap <Leader>k <Plug>(easymotion-overwin-line)
"""

[[plugins]]
repo = "yuki-yano/fuzzy-motion.vim"
depends = ['denops.vim', 'kensaku.vim']
on_cmd = ["FuzzyMotion"]
hook_source = """
let g:fuzzy_motion_matchers = ['fzf', 'kensaku']
"""

# [[plugins]]
# repo = 'lambdalisue/kensaku.vim'
# on_event = ['BufRead', 'CursorHold']
# on_event = ['VimEnter']
# on_source = 'denops.vim'
