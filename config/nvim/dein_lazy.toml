[[plugins]]
repo= 'lilydjwg/colorizer'
on_event = ["BufRead"]

[[plugins]]
repo = 'nvim-lualine/lualine.nvim'
on_event = ["VimEnter"]
lua_source = """
-- require("configs/lualine")
"""

[[plugins]]
on_event = ["BufRead"]
repo = 'jose-elias-alvarez/null-ls.nvim'
lua_source = """
require("configs/null-ls")
"""

[[plugins]]
repo = 'jay-babu/mason-null-ls.nvim'
on_source = ["null-ls.nvim"]

[[plugins]]
repo = "segeljakt/vim-silicon"
on_cmd = ["Silicon"]
lua_source = """
require("configs/silicon")
"""

[[plugins]]
repo = "mattn/vim-chatgpt"
on_cmd = ["chatgpt", "codereviewplease"]

[[plugins]]
repo = "lambdalisue/kensaku-command.vim"
on_cmd = ["Kensaku"]

[[plugins]]
repo = 'skanehira/command.vim'
on_cmd = ["CommandBufferOpen"]

[[plugins]]
repo = 'tpope/vim-commentary'
on_event = ["VimEnter"]

[[plugins]]
repo= 'folke/noice.nvim'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
on_event = ["VimEnter"]
lua_source = """
vim.cmd [[highlight IndentBlanklineIndent1 guifg=#E06C75 gui=nocombine]]
vim.cmd [[highlight IndentBlanklineIndent2 guifg=#E5C07B gui=nocombine]]
vim.cmd [[highlight IndentBlanklineIndent3 guifg=#98C379 gui=nocombine]]
vim.cmd [[highlight IndentBlanklineIndent4 guifg=#56B6C2 gui=nocombine]]
vim.cmd [[highlight IndentBlanklineIndent5 guifg=#61AFEF gui=nocombine]]
vim.cmd [[highlight IndentBlanklineIndent6 guifg=#C678DD gui=nocombine]]

vim.opt.list = true
vim.opt.listchars:append "space:⋅"
vim.opt.listchars:append "eol:↴"

require("indent_blankline").setup {
    space_char_blankline = " ",
    char_highlight_list = {
        "IndentBlanklineIndent1",
        "IndentBlanklineIndent2",
        "IndentBlanklineIndent3",
        "IndentBlanklineIndent4",
        "IndentBlanklineIndent5",
        "IndentBlanklineIndent6",
    },
}
"""

# カラースチーム
[[plugins]]
repo = 'sainnhe/everforest'
on_func = ['colorscheme']

[[plugins]]
repo = 'folke/tokyonight.nvim'
on_func = ['colorscheme']

[[plugins]]
repo = 'bfredl/nvim-luadev'
on_cmd = ['Luadev']

# 使用頻度が低いプラグイン
# 毎回使わないようなプラグインはここ
[[plugins]]
repo = 'sakhnik/nvim-gdb'
on_event = ["BufRead"]

[[plugins]]
repo = 'tpope/vim-surround'
on_event = ["BufRead"]

[[plugins]]
repo = 'skanehira/translate.vim'
on_event = ["BufRead"]

[[plugins]]
repo = 'alvan/vim-closetag'
on_event = ['BufRead']

[[plugins]]
repo = 'skanehira/vsession'
on_cmd = ['SaveSession', 'LoadSession', 'DeleteSession']

[[plugins]]
repo = 'twitvim/twitvim'
on_cmd = [
  "FriendsTwitter"
  "PostToTwitter"
  ]

[[plugins]]
repo = 'kdheepak/lazygit.nvim'
on_cmd = ["LazyGit", "LazyGitConfig", "LazyGitFilter", "LazyGitFilterCurrentFile"]

[[plugins]]
repo = 'https://github.com/Shougo/deol.nvim'
on_cmd = ["Deol"]
# source_lua = """
# """

[[plugins]]
repo = "https://github.com/azadkuh/vim-cmus"
on_cmd = ["Cmus", "CmusCurrent", "CmusPrevious", "CmusPlay", "CmusPause", "CmusStop", "CmusNext"]

[[plugins]]
repo = 'nvim-telescope/telescope-file-browser.nvim'
on_source = ["telescope.nvim"]

[[plugins]]
repo = 'https://github.com/Allianaab2m/telescope-kensaku.nvim'
on_source = ["telescope.nvim"]

[[plugins]]
repo ='nvim-telescope/telescope.nvim'
on_cmd = ["Telescope"]
# on_source = ["telescope-file-browser.nvim"]
lua_source = """
-- To get telescope-file-browser loaded and working with telescope,
-- you need to call load_extension, somewhere after setup function:
require("telescope").load_extension("file_browser")
require("telescope").load_extension("kensaku")

require("telescope").setup({
		extensions = {
			file_browser = {
				-- theme = "ivy",
				-- disables netrw and use telescope-file-browser in its place
				hijack_netrw = true,
				mappings = {
					["i"] = {
						-- your custom insert mode mappings
					},
					["n"] = {
						-- your custom normal mode mappings
					},
				},
			},
		},
	})
"""


[[plugins]]
repo= 'https://github.com/syouzan420/tatevim'
on_cmd = ["Tate"]

[[plugins]]
repo = 'itchyny/calendar.vim'
on_cmd = ["Calendar"]

[[plugins]]
repo = 'https://github.com/dstein64/vim-startuptime'
on_cmd = ["StartupTime"]

[[plugins]]
repo= 'https://github.com/yuttie/comfortable-motion.vim'
on_event = ["BufRead"]

[[plugins]]
repo= 'https://github.com/beauwilliams/statusline.lua'
on_event = ["VimEnter"]
lua_source = """
local statusline = require('statusline')
statusline.tabline = false
statusline.lsp_diagnostics = true
statusline.ale_diagnostics = false

vim.o.laststatus=3
"""

[[plugins]]
repo = 'https://github.com/mhinz/vim-sayonara'
on_cmd = ["Sayonara", "Sayonara!"]

[[plugins]]
repo = 'cohama/lexima.vim'
on_event = ["InsertEnter"]

[[plugins]]
repo = 'vim-denops/denops-helloworld.vim'
on_cmd = ["DenopsHello", "DenopsGrep"]

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
on_event = ["VimEnter"]

[[plugins]]
repo = 'https://github.com/mattreduce/vim-mix'
on_cmd = ["Mix", "Mclean", "Mcompile", "Mdeps", "Mtest"]

[[plugins]]
repo = 'https://github.com/vim-test/vim-test'
on_cmd = ["TestNearest", "TestFile", "TestSuite", "TestLast", "TestVisit"]

[[plugins]]
repo = "https://github.com/wakatime/vim-wakatime"
on_event = ["BufRead"]

[[plugins]]
repo = "https://github.com/HiPhish/nvim-ts-rainbow2"
on_event = ["BufRead"]
lua_source = """
require('nvim-treesitter.configs').setup {
  rainbow = {
    enable = true,
    query = 'rainbow-parens',
    strategy = require('ts-rainbow').strategy.global,
  }
}
"""

[[plugins]]
repo = "https://github.com/JoosepAlviste/nvim-ts-context-commentstring"
on_event = ["BufRead"]
lua_source = """
require'nvim-treesitter.configs'.setup {
  context_commentstring = {
    enable = true
  }
}
"""

[[plugins]]
repo= 'https://github.com/nvim-treesitter/nvim-treesitter'
on_event = ["BufEnter"]
lua_source = """
require'nvim-treesitter.configs'.setup {
  -- ensure_installed = { "c", "lua", "vim", "help", "query" },
  sync_install = false,
  auto_install = true,

  -- ignore_install = { "javascript" },

  highlight = {
    enable = true,

    disable = function(lang, buf)
        local max_filesize = 100 * 1024 -- 100 KB
        local ok, stats = pcall(vim.loop.fs_stat, vim.api.nvim_buf_get_name(buf))
        if ok and stats and stats.size > max_filesize then
            return true
        end
    end,

    additional_vim_regex_highlighting = false,
  },
}
"""

[[plugins]]
repo = "https://github.com/zbirenbaum/copilot.lua"
on_event = ["BufRead"]
lua_source = """
require("copilot").setup({
  suggestion = { enabled = false },
  panel = { enabled = false },
})
"""
